{{ if gt .Values.im.replicas 1.0 }}
# Auth data
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: im-load-balancer
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: im-load-balancer
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - endpoints
      - nodes
      - pods
      - secrets
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - "extensions"
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - "extensions"
    resources:
      - ingresses/status
    verbs:
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: im-load-balancer
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - pods
      - secrets
      - namespaces
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - endpoints
    verbs:
      - get
      - create
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: im-load-balancer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: im-load-balancer
subjects:
  - kind: ServiceAccount
    name: im-load-balancer
    namespace: {{ .Release.Namespace }}
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: im-load-balancer
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: im-load-balancer
  namespace: {{ .Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: im-load-balancer
subjects:
  - kind: ServiceAccount
    name: im-load-balancer
    namespace: {{ .Release.Namespace }}
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: im-load-balancer

# ConfigMap of the haproxy-ingress see: https://github.com/jcmoraisjr/haproxy-ingress#configmap
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: haproxy-load-balancer
data:
  stats-auth: "admin:admin"
  haproxy.tmpl: |
    {{`{{- $ing := . -}}
    {{- $cfg := .Cfg -}}
    defaults
        log global
        timeout http-request    {{ $cfg.TimeoutHTTPRequest }}
        timeout connect         {{ $cfg.TimeoutConnect }}
        timeout client          {{ $cfg.TimeoutClient }}
        timeout client-fin      {{ $cfg.TimeoutClientFin }}
        timeout server          {{ $cfg.TimeoutServer }}
        timeout server-fin      {{ $cfg.TimeoutServerFin }}
        timeout tunnel          {{ $cfg.TimeoutTunnel }}
        timeout http-keep-alive {{ $cfg.TimeoutKeepAlive }}
        mode http
    ######
    ###### Stats page
    ######
    listen stats
        bind *:{{ $cfg.StatsPort }}{{ if $cfg.StatsProxyProtocol }} accept-proxy{{ end }}
        mode http
        stats enable
        stats realm HAProxy\ Statistics
    {{- if ne $cfg.StatsAuth "" }}
        stats auth {{ $cfg.StatsAuth }}
    {{- end }}
        stats uri /
        no log
    frontend http-frontend
            bind *:80
            default_backend imbackend
    backend imbackend
            option httpchk GET /version
            balance roundrobin
            stick-table type string len 32 size 30k expire 120m
            stick store-response hdr(InfID)
            #stick on hdr(InfID)
            acl inf_id path -m beg /infrastructures/
            #acl inf_id path_len gt 40
            stick on path,field(3,/) if inf_id
    {{- range $backend := $ing.Backends }}
    {{- if eq $backend.Name "upstream-default-backend" -}}
    {{- $BackendSlots := index $ing.BackendSlots $backend.Name }}
    {{- range $target, $slot := $BackendSlots.FullSlots }}
        server {{ $slot.BackendServerName }} {{ $target }} check port {{ $slot.BackendEndpoint.Port }} inter {{ $cfg.BackendCheckInterval }}
    {{- end }}
    {{- range $empty := $BackendSlots.EmptySlots }}
        server {{ $empty }} 127.0.0.1:81 check disabled inter {{ $cfg.BackendCheckInterval }}
    {{- end }}
    {{- end }}{{/* if eq $backend.Name */}}
    {{- end }}{{/* range Backends */}}`}}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    run: haproxy-load-balancer
  name: haproxy-load-balancer
spec:
  selector:
    matchLabels:
      run: haproxy-load-balancer
  template:
    metadata:
      labels:
        run: haproxy-load-balancer
    spec:
      serviceAccountName: im-load-balancer
      containers:
      - name: haproxy-load-balancer
        image: quay.io/jcmoraisjr/haproxy-ingress:v0.6.3
        args:
        - --default-backend-service=$(POD_NAMESPACE)/im-backend
        - --configmap=$(POD_NAMESPACE)/haproxy-load-balancer
        - --sort-backends
        ports:
        - name: http
          containerPort: 80
        - name: stat
          containerPort: 1936
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        volumeMounts:
           - name: haproxy-load-balancer
             mountPath: /etc/haproxy/template/haproxy.tmpl
             subPath: haproxy.tmpl
        livenessProbe:
          tcpSocket:
            port: 80
          initialDelaySeconds: 20
          periodSeconds: 20
      volumes:
        - name: haproxy-load-balancer
          configMap:
            name: haproxy-load-balancer

---
apiVersion: v1
kind: Service
metadata:
  name: im-load-balancer-svc
spec:
  ports:
  - name: http
    port: 80
  - name: stats
    port: 1936
  selector:
    run: haproxy-load-balancer
{{ end }}